{"ast":null,"code":"var _jsxFileName = \"/Users/viridianajimenez/My Mac (Viridianas-MacBook-Air.local)/Desktop/Reacionar/my_alacena/client/my_alacena/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\nimport Display from './Components/Display.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [BarData, setBarData] = React.useState('');\n  const [quantityData, setQuantityData] = React.useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(BarcodeScannerComponent, {\n        width: 500,\n        height: 500,\n        onUpdate: (err, result) => {\n          if (result) {\n            setBarData(result.text);\n          } //else setData('Not found item')\n          //onsole.log(err)\n\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        mydata: BarData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", quantityData && quantityData.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", item, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 57\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"0mIouz5PmdKIDqXZ349qAqCA8Yo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/viridianajimenez/My Mac (Viridianas-MacBook-Air.local)/Desktop/Reacionar/my_alacena/client/my_alacena/src/App.js"],"names":["React","useEffect","BarcodeScannerComponent","Display","App","BarData","setBarData","useState","quantityData","setQuantityData","width","err","result","text","map","item"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,uBAAP,MAAoC,8BAApC;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BN,KAAK,CAACO,QAAN,CAAe,EAAf,CAAhC;AAEC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAmCT,KAAK,CAACO,QAAN,CAAe,EAAf,CAAzC;AAOA,sBACE;AAAA,2BACL,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA,8BACO,QAAC,uBAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,QAAQ,EAAE,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAEzB,cAAIA,MAAJ,EAAW;AACTN,YAAAA,UAAU,CAACM,MAAM,CAACC,IAAR,CAAV;AACD,WAJwB,CAKzB;AACA;;AACD;AAVH;AAAA;AAAA;AAAA;AAAA,cADP,eAcM,QAAC,OAAD;AACA,QAAA,MAAM,EAAER;AADR;AAAA;AAAA;AAAA;AAAA,cAdN,eAiBM;AAAA,wBAAOG,YAAY,IAAIA,YAAY,CAACM,GAAb,CAAkBC,IAAD,iBAAU;AAAA,0BAAKA,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADK,mBADF;AAuBF;;GAlCQX,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\nimport Display from './Components/Display.js'\n\nfunction App() {\n\n  const [ BarData, setBarData ] = React.useState('');\n\n   const [quantityData, setQuantityData]  = React.useState('')\n\n\n\n\n\n\n   return (\n     <>\n<Card style={{ width: '18rem' }}>\n       <BarcodeScannerComponent\n         width={500}\n         height={500}\n         onUpdate={(err, result) => {\n\n           if (result){\n             setBarData(result.text)\n           }\n           //else setData('Not found item')\n           //onsole.log(err)\n         }}\n       />\n\n      <Display\n      mydata={BarData}/>\n\n      <div> {quantityData && quantityData.map((item) => <p> {item} </p>) }</div>\n</Card>\n     </>\n   )\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}